@model ChessClient.Models.GameModel
@{
    ViewBag.Title = "Шахматы";
}

<script src="~/Scripts/jquery-1.8.2.js"></script>
<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title</h1>
            </hgroup>ChessDeskCountainer
            <p>
            </p>
        </div>
    </section>

}

        @*<h5>Ввведите ход:</h5>
        @using (Html.BeginForm("ShowGame","Game", new { gameId = Model.gameState.GameId})){ 
           @Html.TextBoxFor(model => model.move)           
           <input type="submit" value="Отправить" >                         
         }*@
        <div id="ChessDeskCountainer">
        <table id="ChessDesk">
            @for(int i = 0; i < 10; i++) { 
                <tr>
                    @for(int j = 0; j < 10; j++) {
                        if(i == 0 || i == 9) {
                            if(j == 0 || j == 9) {
                        <td></td>
                            } else {
                                char chr = (char)(96 + j);
                        <td class="positionY">@chr</td>
                            }

                        } else {
                            if(j == 0 || j == 9) {
                                int num = 9 - i;
                        <td class="positionY">@num</td>
                            } else {
                                if(Model.CurrentMoves.Count == 0) {
                                   if(@Model.CurrentPlayerWhite) {
                                        if(@Model.IsWhiteFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    } else {
                                        if(@Model.IsBlackFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    }
                                }else{
                                    bool CurrentCell = true;
                                    for(int k = 0; k < Model.CurrentMoves.Count; k++) {
                                        if((i - 1) == Model.CurrentMoves[k].x && (j - 1) == Model.CurrentMoves[k].y) {
                                   
                                           
                                            if(@Model.CurrentPlayerWhite) {
                                        if(@Model.IsWhiteFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  onclick="window.location='@Url.Action("CurrentMove", new {gameId = @Model.gameState.GameId, xfrom = @Model.CurrentFigure.x, yfrom = @Model.CurrentFigure.y, xto = i - 1, yto = j - 1})'" class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  onclick="window.location='@Url.Action("CurrentMove", new {gameId = @Model.gameState.GameId, xfrom = @Model.CurrentFigure.x, yfrom = @Model.CurrentFigure.y, xto = i - 1, yto = j - 1})'" class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    } else {
                                        if(@Model.IsBlackFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  onclick="window.location='@Url.Action("CurrentMove", new {gameId = @Model.gameState.GameId, xfrom = @Model.CurrentFigure.x, yfrom = @Model.CurrentFigure.y, xto = i - 1, yto = j - 1})'" class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  onclick="window.location='@Url.Action("CurrentMove", new {gameId = @Model.gameState.GameId, xfrom = @Model.CurrentFigure.x, yfrom = @Model.CurrentFigure.y, xto = i - 1, yto = j - 1})'" class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    }                                            
                                            CurrentCell = false;
                                            break;
                                        }
                                    }
                                    if (CurrentCell){
                                        if(@Model.CurrentPlayerWhite) {
                                        if(@Model.IsWhiteFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    } else {
                                        if(@Model.IsBlackFigure(i - 1, j - 1)) {  
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]">
                                           @Html.ActionLink(" ", "Current", new { gameId = @Model.gameState.GameId, x = i - 1, y = j - 1 }, new { @class = Model.GetFigureImage(i - 1, j - 1) })</td>    
                                        } else {
                                           <td id="@i@j"  class="@Model.cellsCss[i - 1, j - 1]"><div class="@Model.GetFigureImage(i - 1, j - 1)"></div></td> 
                                        }
                                    }
                                    }
                                }
                            }

                        }
                    }
                </tr>
            }
        </table>
        </div>
        <div id="MoveCountainer">
            <div id="MoveNotation">
                @foreach(var move in Model.gameState.Moves){
                    <span>@move.MoveNotation</span><br>
                }
            </div>
        </div>


                